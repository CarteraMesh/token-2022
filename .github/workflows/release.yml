name: Release SPL CLI
on:
  workflow_dispatch:
permissions:
  contents: write

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            name: linux-x86_64
            deps: sudo apt-get update && sudo apt-get install -y libssl-dev libudev-dev pkg-config zlib1g-dev llvm clang cmake make libprotobuf-dev protobuf-compiler
          # - os: macos-latest
          #   target: aarch64-apple-darwin
          #   name: macos-arm64
          #   deps: ""

    runs-on: ${{ matrix.os }}
    name: Build ${{ matrix.name }}

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0 # Need full history for git describe
      - uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.target }}

      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install dependencies
        if: matrix.deps != ''
        run: ${{ matrix.deps }}

      - name: Generate version with git SHA
        id: version
        shell: bash
        run: |
          set -x
          # Get version from Cargo.toml using cargo metadata
          BASE_VERSION=$(cargo metadata --no-deps --format-version 1 | jq -r '.packages[] | select(.name == "spl-token-cli") | .version')

          SHORT_SHA=$(git rev-parse --short HEAD)
          FULL_VERSION="${BASE_VERSION}-${SHORT_SHA}"

          echo "base_version=${BASE_VERSION}" >> $GITHUB_OUTPUT
          echo "short_sha=${SHORT_SHA}" >> $GITHUB_OUTPUT
          echo "full_version=${FULL_VERSION}" >> $GITHUB_OUTPUT
          echo "Generated version: ${FULL_VERSION}"

      - name: Build spl-token-cli release binary
        run: |
          cargo build -p spl-token-cli --features fireblocks --release --target ${{ matrix.target }}

      - name: Create release archive
        shell: bash
        run: |
          mkdir -p release
          cp target/${{ matrix.target }}/release/spl-token release/
          cd release
          tar -czf spl-token-${{ steps.version.outputs.full_version }}-${{ matrix.name }}.tar.gz spl-token
          ls -la

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: spl-token-${{ matrix.name }}
          path: release/spl-token-${{ steps.version.outputs.full_version }}-${{ matrix.name }}.*

  release:
    needs: build
    runs-on: ubuntu-latest
    name: Create Release

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true

      - name: Generate version with git SHA
        id: version
        run: |
          set -x
          # Get version from Cargo.toml using cargo metadata
          BASE_VERSION=$(cargo metadata --no-deps --format-version 1 | jq -r '.packages[] | select(.name == "spl-token-cli") | .version')

          SHORT_SHA=$(git rev-parse --short HEAD)
          FULL_VERSION="${BASE_VERSION}-${SHORT_SHA}"

          echo "base_version=${BASE_VERSION}" >> $GITHUB_OUTPUT
          echo "short_sha=${SHORT_SHA}" >> $GITHUB_OUTPUT
          echo "full_version=${FULL_VERSION}" >> $GITHUB_OUTPUT

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Prepare release files
        run: |
          mkdir -p release
          find artifacts -name "*.tar.gz" -o -name "*.zip" | xargs -I {} cp {} release/
          ls -la release/

      - name: Generate release notes
        run: |
          cat > release_notes.md << EOF
          # SPL Token CLI Release ${{ steps.version.outputs.full_version }}

          This is a custom build of SPL Token CLI with Fireblocks integration.

          ## Build Information
          - Base Version: ${{ steps.version.outputs.base_version }}
          - Git SHA: ${{ steps.version.outputs.short_sha }}
          - Built from: ${{ github.sha }}
          - Build Date: $(date -u +"%Y-%m-%d %H:%M:%S UTC")

          ## Features
          - Fireblocks integration enabled
          - Token2022 SPL Token CLI
          - Based on Agave Solana SDK

          ## Supported Platforms
          - Linux x86_64
          - macOS ARM64 (Apple Silicon)

          ## Installation

          ### Linux x86_64
          \`\`\`bash
          wget https://github.com/${{ github.repository }}/releases/download/v${{ steps.version.outputs.full_version }}/spl-token-${{ steps.version.outputs.full_version }}-linux-x86_64.tar.gz
          tar -xzf spl-token-${{ steps.version.outputs.full_version }}-linux-x86_64.tar.gz
          chmod +x spl-token
          ./spl-token --version
          \`\`\`

          ### macOS ARM64
          \`\`\`bash
          wget https://github.com/${{ github.repository }}/releases/download/v${{ steps.version.outputs.full_version }}/spl-token-${{ steps.version.outputs.full_version }}-macos-arm64.tar.gz
          tar -xzf spl-token-${{ steps.version.outputs.full_version }}-macos-arm64.tar.gz
          chmod +x spl-token
          ./spl-token --version
          \`\`\`
          EOF

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.version.outputs.full_version }}
          name: SPL Token CLI v${{ steps.version.outputs.full_version }}
          body_path: release_notes.md
          files: release/*
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
